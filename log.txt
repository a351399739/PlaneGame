01-01 16:30
所有功能完成。
exit(0);
------------------------------------------------
01-01 08:29
几乎所有功能完成
下一步是敌机碰撞时变白
-------------------------------------------------
12-31 17:45
追踪弹结束。
boss应当加入一个大招
--------------------------------------------------
12-31 14:04
几乎所有功能完成。
上一部所述体系改动成功
加入追踪弹和免疫的效果
下一步是最后的改动和精英机子弹多样性改变
----------------------------------------------------------
12-30 13：21
客机，BOSS已经基本完成
上一步所述体系完成
下一步是把Bullet改为Goods并加入items类
然后关卡编辑器
-------------------------------------------------------------------
12-29 22:00
我将把整个继承体系改变：
CEnemyPlane->CPlane
CMyPlane父类：CGameObject->CPlane
----------------------------------------------------------------------
12-28 20:48
序列化并不好用（或许是太不熟练了）
我自己手动储存每一个数值
这样一来有很多隐藏的错误！好在现在我看到的都修复了
计数器已建立
我可以为每一关做一个boss了
-------------------------------------------------------------------
12-28 09:41
原来Doc才是用来保存数据的
View是负责视图部分
不过已经到这一步了，再改可是真的不容易
就这样吧
我要实现序列化了
--------------------------------------------------------------------
12-28 00:30
上一步所述函数已被成功修改
但是在OnImpact()中是否应该返回POS值？
貌似无需，可以在ImpactWith（）中返回
对于大型计时器，可以用变量存储其提醒次数以达到定时
下一步,我应该做一个boss了，现在睡觉
-------------------------------------------------------------------
12-27 21:41
从这里开始：基本功能已经完成。

重新开始 设置关卡 DEBUG模式与文字显示 无敌模式
上一步的背景也完成了 现在似乎已经没有bug
下一步是修改CGameObject的一下函数成员：
int OnImpact()--->int OnImpact(int type)//碰撞和类型有关
void move(int level)--->void move()	//移动和等级无关，（即使除以3也过快）
这应该是体系中最后的大改变
碰撞类型有：
#define MY_BULLET 		1
#define	ENEMY_BULLET 		2
#define GEN_ENEMY_PLANE		3
#define	ELITE_ENEMY_PLANE	4
#define	MY_PLANE		5
#define BOSS			6
#define	ITEM			7
接下来应该做boss
-----------------------------------------------------------------
12-27 02:44
好的，现在有4个链表了---这意味着爆炸变为可用
但是只会在摧毁时进行一次爆炸
这是否不妥？
下一步，我应该画一个背景，以及编辑菜单
-------------------------------------------------------------------
12-27 01:32
太难了，一个继承体系的图甚至都不能完整画出来。
但我发现只要CGameObject中不声明函数或者变量，CGameList都不能使用它
有点误入歧途。这个保存点很关键。
--------------------------------------------------------------------
12-27 01:19
我认为直接这么交上去，也可以过关了。。这不是我想要的
我要明白C++的继承体系 而不是用已有的MFC库画出几辆飞机
现在就可以开始了。
--------------------------------------------------------------------
12-27 01:01
CGameList工作得看似很完美，但是有致命的缺陷
这个项目完全没有用到多继承（根本忽视了这一点）
我应该推翻重来或是将错就错？
处理碰撞已经完成了。
上一步想到的shot函数传入level变量也实现了
我决定先把基本功能完成，之后学习C++的多继承。
再决定是否要全盘推翻。
---------------------------------------------------------------------
12-26 19:15
新建了一个类，CGameList，旨在把链表中的功能统一化，但没有投入使用
所有的飞机能够发射子弹了，但是没有碰撞效果。
shot函数是否应该传入leve变量以确定敌军发射子弹概率？
下一步是吧CGameList投入使用
然后就能处理碰撞了。
---------------------------------------------------------------------
12-26 00:27
所有的对象都是CGameObject！
这样一来我可以用CGameObject的指针来处理draw()和删除
可以不是每个对象都有xspeed和yspeed，否则能做到更多。
我自己可以发子弹啦，实现在MyPlane::shot（）里面，这样一来可以有扩展性
敌人发子弹的功能近在咫尺。
完成了之后就是碰撞的实现。
-----------------------------------------------------------------------
12-25 23:17
我把敌人普通飞机的图片文件静态化了
这样应该能减少一部分的空间消耗（每个敌机都要一份图片，多浪费啊）
那么子弹和精英机器当然也可以这么做
不过快点做出  shot();吧
----------------------------------------------
12-25 20:00
我对整个类继承结构进行了修改
现在只有一个MFC类了：CGameObject
{
位置
画（）
获得大小（）
或者矩形（）
}
在我的预计里，他将派生四个类
MyPlane
EnemyPlane(抽象类)-普通飞机 精英飞机
Bullet(抽象类)-我军子弹 敌军子弹
Boss

至少现在形势乐观
MyPlane和Boss后续也许能实例化更多的对象，然而现在的任务是要可以发射子弹。

每个普通飞机都应该有1/2的几率发射追踪或者随机方向的子弹
而精英则有自己的方法，或是大范围子弹，或是连续的追踪子弹，他们不再随机
boss级则每次发射更多的子弹
他们应当都有自己的计时器（并不知道需要消耗多少资源）
如果这样 这个对象被销毁之前，我必须要卸载掉他的计时器（这样的话需要记录他的ID）
能否安全的申请更多的计时器呢。。。

我军的计时器可以用系统的。。。（然而是个呵呵。并不能。）
-------------------------------------------------
静态变量问题解决
代价是每个类都必须写出一个静态变量了。
好像并没有解决问题
是否应该重新来过并以CPlaneObject为基类
我应该尝试建立一个这样的类并让CPlane继承他
如果不行那么应该删除CPlane并把他当作C++建立
plane	myplane
	enemyplane	genenemny
-------------------------------------------------
什么都没有的备份点
-------------------------------------------------
我需要一个日志来记录当前的状态！

